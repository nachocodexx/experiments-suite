node-id = "ex-xxxx"
node-id =${?NODE_ID}
load-balancer = "RB"
load-balancer = ${?LOAD_BALANCER}
workload-path="/home/nacho/Programming/Scala/experiments-suite/target/workloads"
workload-path = ${?WORKLOAD_PATH}
workload-filename="workload_cache_0.csv"
workload-filename = ${?WORKLOAD_FILENAME}
static-extension = "bin"
static-extension = ${?STATIC_EXTENSION}
source-folder = "/home/nacho/Programming/Scala/experiments-suite/target/source"
source-folder = ${?SOURCE_FOLDER}
cache-nodes = [
  {
    host ="localhost",
    port = 8081
  },
  {
    host ="localhost",
    port = 8082
  }
]
cache-nodes = ${?CACHE_NODES}



//
rabbitmq {
//  host = "localhost",
//  port = 5672,
  nodes = [
    {
      host: "148.247.201.222",
      port: 5672,
    },
    {
      host:"148.247.201.222",
      port: 5673
    }
  ]
  virtual-host = "/",
  connection-timeout = 3,
  ssl = false,
  username = "nachox",
  password = "$1$9IMYrTig$iUET1Vy6lDq2t7m1K4amL1",
  requeue-on-nack = false,
  requeue-on-reject = false,
  internal-queue-size = 500
}

rabbitmq.nodes = ${?RABBITMQ_NODES}
//rabbitmq.host = ${?RABBITMQ_HOST}
//rabbitmq.port = ${?RABBITMQ_PORT}
rabbitmq.virtual-host = ${?RABBITMQ_VIRTUAL_HOST}
rabbitmq.connection-timeout = ${?RABBITMQ_CONNECTION_TIMEOUT}
rabbitmq.ssl = ${?RABBITMQ_SSL}
rabbitmq.username = ${?RABBITMQ_USERNAME}
rabbitmq.password = ${?RABBITMQ_PASSWORD}
rabbitmq.requeue-on-nack = ${?RABBITMQ_REQUEUE_ON_NACK}
rabbitmq.requeue-on-reject = ${?RABBITMQ_REQUEUE_ON_REJECT}
rabbitmq.internal-queue-size = ${?RABBITMQ_INTERNAL_QUEUE_SIZE}
